name: E2E

on:
  pull_request:
  push:
    branches:
      - test

env:
  SCRIPTS_DIR: test/scripts

jobs:
  e2e:
    name: E2E
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Build Docker Image
        run: |
          make docker-build
          docker images
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Create Kubrnetes With Kind
        run: |
          kind create cluster
          kubectl version
          kind load docker-image controller:latest
#      - name: Kubernetes Cluster Info
#        if: ${{ failure() }}
#        run: |
#          df -h
#          minikube logs
#          minikube status
      - name: Deploy Laborer
        run: |
          kubectl create ns laborer-system
          bash hack/webhook-create-signed-cert.sh --namespace laborer-system --service laborer-webhook-service --secret laborer-webhook-server-cert
          cat config/default/webhook_ca_bundle_patch_template.yaml | bash hack/webhook-patch-ca-bundle.sh > config/default/webhook_ca_bundle_patch.yaml
          export IMG=controller:latest
          make deploy

          sleep 5
          kubectl get all -n laborer-system
          kubectl wait --for=condition=available deployment.apps/$(kubectl get deployment -n laborer-system | awk '$1 !~ /NAME/ {print $1}') -n laborer-system --timeout=60s
      - name: Logs
        if: ${{ failure() }}
        run: |
          kubectl get pods -n laborer-system -o yaml
      - name: Clean Up
        if: ${{ always() }}
        run: kind delete cluster